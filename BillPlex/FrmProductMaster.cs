using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using BusinessLayer;

namespace BillPlex
{
    public partial class FrmProductMaster : DevExpress.XtraEditors.XtraForm
    {
        private ProductMaster productMasterRequest;
        public FrmProductMaster()
        {
            InitializeComponent();
            productMasterRequest = new ProductMaster();
            productMasterRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            productMasterRequest.Result = new ResultDetail();

            btnAdd.Enabled = true;
            btEdit.Enabled = false;
            btUpdate.Enabled = false;
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }
        public void ReloadSqlDataSource()
        {
            sqlDataSource1.FillAsync();
            grd_productmaster.RefreshData();

        }
        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtPName.Text != string.Empty)
                {
                    productMasterRequest.ProductName = txtPName.Text;
                    productMasterRequest.Update();

                    if (productMasterRequest.Result.Status == ResultStatus.Success)
                    {
                        btnAdd.Enabled = true;
                        btEdit.Enabled = false;
                        btUpdate.Enabled = false;
                        XtraMessageBox.Show(productMasterRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        ReloadSqlDataSource();
                        btClear_Click();
                    }
                    else
                    {
                        XtraMessageBox.Show(productMasterRequest.Result.Message, "Alert", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
                else
                {
                    XtraMessageBox.Show(productMasterRequest.Result.Message, "please give the manditory field", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }

            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btEdit_Click(object sender, EventArgs e)
        {
            
        }

        private void btDelete_Click(object sender, EventArgs e)
        {
            var selectedRows = grd_productmaster.GetSelectedRows();

            foreach (var rowHandle in selectedRows)
            {
                var id = grd_productmaster.GetRowCellValue(rowHandle, "Id");

                productMasterRequest.Id = (Int32)id;
            }

            productMasterRequest.Delete();

            if (productMasterRequest.Result.Status == ResultStatus.Success)
            {
                XtraMessageBox.Show(productMasterRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                ReloadSqlDataSource();
            }
        }

        private void btClear_Click(object sender = null, EventArgs e = null)
        {
            productMasterRequest.Id = 0;
            txtPName.ResetText();
            btnAdd.Enabled = false;
        }

        private void txtSearch_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void gridControl1_DoubleClick(object sender, EventArgs e)
        {
            try
            {
                var selectedRows = grd_productmaster.GetSelectedRows();

                foreach (var rowHandle in selectedRows)
                {
                    productMasterRequest.Id = (Int32)grd_productmaster.GetRowCellValue(rowHandle, "Id");
                    txtPName.Text = grd_productmaster.GetRowCellValue(rowHandle, "Productmodel").ToString();
                }
                btnAdd.Enabled = false;
                btEdit.Enabled = false;
                btDelete.Enabled = true;
                btUpdate.Enabled = true;

            }
            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void FrmProductMaster_Load(object sender, EventArgs e)
        {
            int centerX = (this.Width - panelControl4.Width) / 2;
            int centerY = (this.Height - panelControl4.Height) / 2;

            // Set the controls' positions to the calculated center position
            panelControl4.Location = new Point(centerX, centerY);
        }
    }
}