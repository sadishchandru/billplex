using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using BusinessLayer;
using System.Collections;
using DevExpress.XtraEditors.Controls;
//using DataLayer;

namespace BillPlex
{
    public partial class FrmCompanyProfileBankInfo : DevExpress.XtraEditors.XtraForm
    {
        //private readonly SqlConnector _conn;
        private CompanyBankInfo CompanyBankRequest;
        public FrmCompanyProfileBankInfo()
        {
            InitializeComponent();
            CompanyBankRequest = new CompanyBankInfo();
            CompanyBankRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            Dictionary<string, bool> dropDownList = new Dictionary<string, bool>        {
                    { "MasterCompanyRequired", true }
                };
            var dropdwonList = CompanyBankRequest.GetDropdownCollections(dropDownList);

            foreach (DictionaryEntry item in dropdwonList)
            {
                if (item.Key == "MasterCompanyRequired")
                {
                    CompanyBankRequest.MasterCompanyList = (List<DropDownItemInfo>)item.Value;
                }
            }


            if (CompanyBankRequest.MasterCompanyList != null)
            {
                if (CompanyBankRequest.MasterCompanyList.Count() > 0)
                {
                    foreach (DropDownItemInfo item in CompanyBankRequest.MasterCompanyList)
                    {
                        drpMainCompany.Properties.Items.Add(new ImageComboBoxItem(item.Name));
                    }
                }
            }

            var list = new List<string> {
                "Bank A",
            "Puduvai Bharathiar Grama Bank",
            "State Bank"
            };

            drpBankName.Properties.Items.AddRange(list);
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            try
            {
                if (drpMainCompany.Text != string.Empty && drpBankName.Text != string.Empty && TxtBankAccountNo.Text != string.Empty && TxtAddress.Text != string.Empty && TxtBranchCode.Text != string.Empty && TxtBranchName.Text != string.Empty && TxtIfsCode.Text != string.Empty)
                {
                    var selectedItem = drpMainCompany.EditValue;

                    if (selectedItem != null)
                    {
                        CompanyBankRequest.MainCompany = CompanyBankRequest.MasterCompanyList.FirstOrDefault(item => item.Name == selectedItem.ToString())?.Id ?? -1;
                    }
                    //CompanyBankRequest.MainCompany = drpMainCompany.Text;
                    CompanyBankRequest.BankName = drpBankName.Text;
                    CompanyBankRequest.BankAcNo = TxtBankAccountNo.Text;
                    CompanyBankRequest.Address = TxtAddress.Text;
                    CompanyBankRequest.BranchCode = TxtBranchCode.Text;
                    CompanyBankRequest.BranchName = TxtBranchName.Text;
                    CompanyBankRequest.IFSCode = TxtIfsCode.Text;
                    CompanyBankRequest.Update();

                    if (CompanyBankRequest.Result.Status == ResultStatus.Success)
                    {
                        MainBankInfoGridView.RefreshData();

                        XtraMessageBox.Show(CompanyBankRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
                else
                {
                    XtraMessageBox.Show(CompanyBankRequest.Result.Message, "please give the manditory field", MessageBoxButtons.OK, MessageBoxIcon.Information);

                }
            }
            catch (Exception ex)
            {
                // Display a warning alert
                //XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            // Calling the stored procedure for creating a new Company Profile
            //SqlParameter[] parameters = new SqlParameter[]
            //{
            //    new SqlParameter("@MainCompanyId", drpMainCompany.Text),
            //    new SqlParameter("@BankName", drpBankName.Text),
            //    new SqlParameter("@BankAcNo", TxtBankAccountNo.Text),
            //    new SqlParameter("@BranchCode",TxtBranchCode.Text),
            //    new SqlParameter("@BranchName", TxtBranchName.Text),
            //    new SqlParameter("@IFSCode", TxtIfsCode.Text),
            //    new SqlParameter("@Address", TxtAddress.Text),
            //};

            //var i = _conn.ExecuteNonQuery("PRO_UpdateMainBankInfo", parameters);
        }

        private void btnUpdate_Click(object sender, EventArgs e)
        {
            //var Id = 0;
            //SqlParameter[] parameters = new SqlParameter[]
            //{
            //    new SqlParameter("@MainCompanyId", drpMainCompany.Text),
            //    new SqlParameter("@BankName", drpBankName.Text),
            //    new SqlParameter("@BankAcNo", TxtBankAccountNo.Text),
            //    new SqlParameter("@BranchCode",TxtBranchCode.Text),
            //    new SqlParameter("@BranchName", TxtBranchName.Text),
            //    new SqlParameter("@IFSCode", TxtIfsCode.Text),
            //    new SqlParameter("@Address", TxtAddress.Text),
            //};

            //var i = _conn.ExecuteNonQuery("PRO_UpdateMainBankInfo", parameters);
        }

        private void btn_GridView(object sender, EventArgs e)
        {
            try
            {
                
                    var selectedRows = MainBankInfoGridView.GetSelectedRows();

                    foreach (var rowHandle in selectedRows)
                    {
                        CompanyBankRequest.Id = (Int64)MainBankInfoGridView.GetRowCellValue(rowHandle, "MainCompanyId");
                        drpMainCompany.SelectedIndex = Convert.ToInt32(MainBankInfoGridView.GetRowCellValue(rowHandle, "MainCompanyId").ToString());
                        drpBankName.Text = MainBankInfoGridView.GetRowCellValue(rowHandle, "BankName").ToString();
                        TxtBankAccountNo.Text = MainBankInfoGridView.GetRowCellValue(rowHandle, "BankAcNo").ToString();
                        TxtAddress.Text = MainBankInfoGridView.GetRowCellValue(rowHandle, "Address").ToString();
                        TxtBranchCode.Text = MainBankInfoGridView.GetRowCellValue(rowHandle, "BranchCode").ToString();
                        TxtBranchName.Text = MainBankInfoGridView.GetRowCellValue(rowHandle, "BranchName").ToString();
                        TxtIfsCode.Text = MainBankInfoGridView.GetRowCellValue(rowHandle, "IFSCode").ToString();

                    }
                    btnUpdate.Enabled = true;
                    btnAdd.Enabled = false;

                
                

            }
            catch (Exception ex)
            {
                throw ex;
            }

            
            
            }
    }
}