using BusinessLayer;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace BillPlex
{
    public partial class FrmEmployeeMasterList : DevExpress.XtraEditors.XtraForm
    {

        private EmployeePersonal EmployeePersonalRequest;

        private FrmEmployeeMaster FrmEmployeeRequest;
        public FrmEmployeeMasterList()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously

            EmployeePersonalRequest = new EmployeePersonal();
            EmployeePersonalRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;

            //EmployeePersonalRequest.GetList();
            sqlDataSource1.FillAsync();
        }

        public void ReloadSqlDataSource()
        {
            sqlDataSource1.FillAsync();
            EmployeeGridView.RefreshData();

        }
        private void btnNew_Click(object sender, EventArgs e)
        {
            bool IsOpen = false;

            Form myForm = Application.OpenForms["FrmEmployeeMaster"];
            if (myForm != null)
            {
                myForm.Close();
                myForm = new FrmEmployeeMaster();
                myForm.MdiParent = this.MdiParent;
                myForm.Show();
                IsOpen = true;
            }

            if (IsOpen == false)
            {
                FrmEmployeeMaster CP = new FrmEmployeeMaster();
                CP.MdiParent = this.MdiParent;
                CP.Show();
            }
            //FrmEmployeeMaster CP = new FrmEmployeeMaster();
            //CP.MdiParent = this.MdiParent;
            //CP.Show();
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {
            //var selectedRows = gridView1.GetSelectedRows();

            //foreach (var rowHandle in selectedRows)
            //{
            //    var id = gridView1.GetRowCellValue(rowHandle, "Id").ToString(); // Retrieve the value of the "Id" column

            //    // Extract the desired values from the selected row
            //    string value1 = gridView1.GetRowCellValue(rowHandle, "Column1")?.ToString(); // Replace "Column1" with the actual column name
            //    string value2 = gridView1.GetRowCellValue(rowHandle, "Column2")?.ToString(); // Replace "Column2" with the actual column name

            //    // Populate the TextBox controls with the retrieved values
            //    colMasterCompanyId.SearchText = value1;
            //    colEmpCode.SearchText = value2;
            //}
        }

        private void btn_EmployeeGridView_Click(object sender, EventArgs e)
        {

            var selectedRow = EmployeeGridView.GetSelectedRows();

            if (selectedRow.Count() > 0)
            {
                FrmEmployeeRequest = new FrmEmployeeMaster();
                FrmEmployeeRequest.MdiParent = this.MdiParent;
                FrmEmployeeRequest.BindData(EmployeeGridView);

                FrmEmployeeRequest.Show();

            }
        }

        private void FrmEmployeeMasterList_Load(object sender, EventArgs e)
        {
            // Scale our form to look like it did when we designed it.
            // This adjusts between the screen resolution of the design computer and the workstation.
            int ourScreenWidth = Screen.FromControl(this).WorkingArea.Width;
            int ourScreenHeight = Screen.FromControl(this).WorkingArea.Height;
            float scaleFactorWidth = ourScreenWidth / 1600f;
            float scaleFactorHeigth = ourScreenHeight / 900f;
            SizeF scaleFactor = new SizeF(scaleFactorWidth, scaleFactorHeigth);
            Scale(scaleFactor);

            // If you want to center the resized screen.
            CenterToScreen();
        }
    }
}