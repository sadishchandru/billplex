using BusinessLayer;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace BillPlex
{
    public partial class FrmRawMaterial : DevExpress.XtraEditors.XtraForm
    {
        private RawMaterial RawMaterialRequest;
        public FrmRawMaterial()
        {
            InitializeComponent();
            RawMaterialRequest = new RawMaterial();
            RawMaterialRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            RawMaterialRequest.Result = new ResultDetail();

            btnAdd.Enabled = true;
            btEdit.Enabled = false;
            btUpdate.Enabled = false;
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }
        public void ReloadSqlDataSource()
        {
            sqlDataSource1.FillAsync();
            gridView1.RefreshData();

        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtRawMaterial.Text != string.Empty && txtStock.Text != string.Empty)
                {
                    RawMaterialRequest.RawMaterials = txtRawMaterial.Text;
                    RawMaterialRequest.RawMaterialType = txtType.Text;
                    RawMaterialRequest.RawMaterialStock = txtStock.Text;
                    RawMaterialRequest.Update();


                    if (RawMaterialRequest.Result.Status == ResultStatus.Success)
                    {
                        XtraMessageBox.Show(RawMaterialRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        btnClear_Click();
                        ReloadSqlDataSource();
                        btEdit.Enabled = false;
                        btUpdate.Enabled = false;
                        btnAdd.Enabled = true;

                    }
                    else
                    {
                        XtraMessageBox.Show(RawMaterialRequest.Result.Message, "Alert", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
                else
                {
                    XtraMessageBox.Show("please give the manditory field", "Validation", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }

            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnClear_Click(object sender = null, EventArgs e = null)
        {
            RawMaterialRequest.Id = 0;
            // Clear the values in textboxes
            txtType.ResetText();
            txtRawMaterial.ResetText();
            txtStock.ResetText();
            txtSearch.ResetText();
            svgImageBox1.ResetText();
        }

        private void btDelete_Click(object sender, EventArgs e)
        {
            var selectedRows = gridView1.GetSelectedRows();

            foreach (var rowHandle in selectedRows)
            {
                var id = gridView1.GetRowCellValue(rowHandle, "Id");

                RawMaterialRequest.Id = (Int32)id;
            }

            RawMaterialRequest.Delete();

            if (RawMaterialRequest.Result.Status == ResultStatus.Success)
            {
                XtraMessageBox.Show(RawMaterialRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                ReloadSqlDataSource();
            }
        }

        private void btExit_Click(object sender, EventArgs e)
        {
            //RawMaterialRequest.CloseConnection();
            this.Close();

        }

        private void btExit_Click_1(object sender, EventArgs e)
        {
            this.Close();
        }

        private void gridControl1_DoubleClick(object sender, EventArgs e)
        {
            try
            {
                var selectedRows = gridView1.GetSelectedRows();

                foreach (var rowHandle in selectedRows)
                {
                    RawMaterialRequest.Id = (Int32)gridView1.GetRowCellValue(rowHandle, "Id");
                    txtType.Text = gridView1.GetRowCellValue(rowHandle, "RawMaterialType").ToString();
                    txtRawMaterial.Text = gridView1.GetRowCellValue(rowHandle, "RawMaterials").ToString();
                    txtStock.Text = gridView1.GetRowCellValue(rowHandle, "RawMaterialStock").ToString();
                }
                btnAdd.Enabled = false;
                btEdit.Enabled = false;
                btDelete.Enabled = true;
                btUpdate.Enabled = true;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private void FrmRawMaterial_Load(object sender, EventArgs e)
        {
            int centerX = (this.Width - panelControl4.Width) / 2;
            int centerY = (this.Height - panelControl4.Height) / 2;

            // Set the controls' positions to the calculated center position
            panelControl4.Location = new Point(centerX, centerY);
        }
    }
}