using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using BusinessLayer;
using System.Collections;
using DevExpress.XtraEditors.Controls;
//using DataLayer;

namespace BillPlex
{
    public partial class FrmSubClientCompanyBankInfo : DevExpress.XtraEditors.XtraForm
    {
        private SubClientCompanyBank SubClientCompanyBankRequest;
        //private readonly SqlConnector _conn;
        public FrmSubClientCompanyBankInfo()
        {
            InitializeComponent();
            sqlDataSource1.FillAsync();
            string connectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            SubClientCompanyBankRequest = new SubClientCompanyBank();
            SubClientCompanyBankRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            Dictionary<string, bool> dropDownList = new Dictionary<string, bool>        {
                    { "ClientMasterBankRequired", true },
                    { "SubClientBankRequired", true }
                };
            var dropdwonList = SubClientCompanyBankRequest.GetDropdownCollections(dropDownList);

            foreach (DictionaryEntry item in dropdwonList)
            {
                if (item.Key == "ClientMasterBankRequired")
                {
                    SubClientCompanyBankRequest.ClientCompanyList = (List<DropDownItemInfo>)item.Value;
                }
                if (item.Key == "SubClientBankRequired")
                {
                    SubClientCompanyBankRequest.SubClientCompanyList = (List<DropDownItemInfo>)item.Value;
                }
            }
            sqlDataSource1.FillAsync();

            if (SubClientCompanyBankRequest.ClientCompanyList != null)
            {
                if (SubClientCompanyBankRequest.ClientCompanyList.Count() > 0)
                {
                    foreach (DropDownItemInfo item in SubClientCompanyBankRequest.ClientCompanyList)
                    {
                        drpClientCompany.Properties.Items.Add(new ImageComboBoxItem(item.Name));
                    }
                }
            }

            if (SubClientCompanyBankRequest.SubClientCompanyList != null)
            {
                if (SubClientCompanyBankRequest.SubClientCompanyList.Count() > 0)
                {
                    foreach (DropDownItemInfo item in SubClientCompanyBankRequest.SubClientCompanyList)
                    {
                        drpSubCompany.Properties.Items.Add(new ImageComboBoxItem(item.Name));
                    }
                }
            }
            

            var list = new List<string> {
                "Bank A",
            "Puduvai Bharathiar Grama Bank",
            "State Bank"
            };

            drpBankName.Properties.Items.AddRange(list);
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                var selectedSubClientItem = drpSubCompany.EditValue;

                if (selectedSubClientItem != null)
                {
                    SubClientCompanyBankRequest.SubClientCompanyId = SubClientCompanyBankRequest.SubClientCompanyList.FirstOrDefault(item => item.Name == selectedSubClientItem.ToString())?.Id ?? -1;
                }

                var selectedClientItem = drpClientCompany.EditValue;
                if (selectedClientItem != null)
                {
                    SubClientCompanyBankRequest.ClientCompanyId = SubClientCompanyBankRequest.ClientCompanyList.FirstOrDefault(item => item.Name == selectedClientItem.ToString())?.Id ?? -1;
                }
                // Calling the stored procedure for creating a new Company Profile
                {

                    //ClientCompanyBankInfoRequest.ClientCompanyId = drpClientCompany.Text;
                    SubClientCompanyBankRequest.BankName = drpBankName.Text;
                    SubClientCompanyBankRequest.BankAcNo = TxtBankAccountNo.Text;
                    SubClientCompanyBankRequest.BranchCode = TxtBranchCode.Text;
                    SubClientCompanyBankRequest.BranchName = TxtBranchName.Text;
                    SubClientCompanyBankRequest.IFSCode = TxtIfsCode.Text;
                    SubClientCompanyBankRequest.Address = TxtAddress.Text;
                    SubClientCompanyBankRequest.Update();
                };
                if (SubClientCompanyBankRequest.Result.Status == ResultStatus.Success)
                {
                    //ClientCompanyBankInfoRequest.RefreshData();

                    XtraMessageBox.Show(SubClientCompanyBankRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            catch
            {
            }
        }

    }

   

        //var i = _conn.ExecuteNonQuery("PRO_UpdateClientBankInfo", parameters);
    
 
}