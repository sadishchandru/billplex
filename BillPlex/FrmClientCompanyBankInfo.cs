using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using BusinessLayer;
using DevExpress.XtraEditors.Controls;
using System.Collections;

namespace BillPlex
{
    public partial class FrmClientCompanyBankInfo : DevExpress.XtraEditors.XtraForm
    {
        private ClientCompanyBankInfo ClientCompanyBankInfoRequest;
        //private readonly SqlConnector _conn;
        public FrmClientCompanyBankInfo()
        {
            InitializeComponent();
            ClientCompanyBankInfoRequest = new ClientCompanyBankInfo();
            ClientCompanyBankInfoRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            Dictionary<string, bool> dropDownList = new Dictionary<string, bool>        {
                    { "MasterCompanyRequired", true },
                    { "ClientCompanyRequired", true }
                };
            var dropdwonList = ClientCompanyBankInfoRequest.GetDropdownCollections(dropDownList);

            foreach (DictionaryEntry item in dropdwonList)
            {
                if (item.Key == "MasterCompanyRequired")
                {
                    ClientCompanyBankInfoRequest.MasterCompanyList = (List<DropDownItemInfo>)item.Value;
                }
                if (item.Key == "ClientCompanyRequired")
                {
                    ClientCompanyBankInfoRequest.ClientCompanyList = (List<DropDownItemInfo>)item.Value;
                }
            }
            sqlDataSource1.FillAsync();

            if (ClientCompanyBankInfoRequest.MasterCompanyList != null)
            {
                if (ClientCompanyBankInfoRequest.MasterCompanyList.Count() > 0)
                {
                    foreach (DropDownItemInfo item in ClientCompanyBankInfoRequest.MasterCompanyList)
                    {
                        drpMainCompany.Properties.Items.Add(new ImageComboBoxItem(item.Name));
                    }
                }
            }
            if (ClientCompanyBankInfoRequest.ClientCompanyList != null)
            {
                if (ClientCompanyBankInfoRequest.ClientCompanyList.Count() > 0)
                {
                    foreach (DropDownItemInfo item in ClientCompanyBankInfoRequest.ClientCompanyList)
                    {
                        drpClientCompany.Properties.Items.Add(new ImageComboBoxItem(item.Name));
                    }
                }
            }

            var list = new List<string> {
                "Bank A",
            "Puduvai Bharathiar Grama Bank",
            "State Bank"
            };

            drpBankName.Properties.Items.AddRange(list);
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                if (drpMainCompany.Text != string.Empty && drpClientCompany.Text != string.Empty && drpBankName.Text != string.Empty && txtAccountNo.Text != string.Empty && txtAddress.Text != string.Empty && txtBranchCode.Text != string.Empty && TxtBranchName.Text != string.Empty && txtIfsCode.Text != string.Empty)
                {
                    var selectedMainItem = drpMainCompany.EditValue;

                    if (selectedMainItem != null)
                    {
                        ClientCompanyBankInfoRequest.MainCompanyId = ClientCompanyBankInfoRequest.MasterCompanyList.FirstOrDefault(item => item.Name == selectedMainItem.ToString())?.Id ?? -1;
                    }

                    var selectedClientItem = drpClientCompany.EditValue;
                    if (selectedClientItem != null)
                    {
                        ClientCompanyBankInfoRequest.ClientCompanyId = ClientCompanyBankInfoRequest.ClientCompanyList.FirstOrDefault(item => item.Name == selectedClientItem.ToString())?.Id ?? -1;
                    }
                    // Calling the stored procedure for creating a new Company Profile
                    {

                        //ClientCompanyBankInfoRequest.ClientCompanyId = drpClientCompany.Text;
                        ClientCompanyBankInfoRequest.BankName = drpBankName.Text;
                        ClientCompanyBankInfoRequest.BankAcNo = txtAccountNo.Text;
                        ClientCompanyBankInfoRequest.BranchCode = txtBranchCode.Text;
                        ClientCompanyBankInfoRequest.BranchName = TxtBranchName.Text;
                        ClientCompanyBankInfoRequest.IFSCode = txtIfsCode.Text;
                        ClientCompanyBankInfoRequest.Address = txtAddress.Text;
                        ClientCompanyBankInfoRequest.Update();
                    };
                    if (ClientCompanyBankInfoRequest.Result.Status == ResultStatus.Success)
                    {
                        //ClientCompanyBankInfoRequest.RefreshData();

                        XtraMessageBox.Show(ClientCompanyBankInfoRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        //btnUpdate.Enabled = true;
                        btnAdd.Enabled = false;
                        btnCancel.Enabled = true;
                    }
                }
                else
                {
                    XtraMessageBox.Show(ClientCompanyBankInfoRequest.Result.Message, "please give the manditory field", MessageBoxButtons.OK, MessageBoxIcon.Information);

                }


            }
            catch 
            {
            }

            //var i = _conn.ExecuteNonQuery("PRO_UpdateClientBankInfo", parameters);
        }

        //private void btnUpdate_Click(object sender, EventArgs e)
        //{
        //    var Id = 0;
        //    SqlParameter[] parameters = new SqlParameter[]
        //    {
        //        new SqlParameter("@MainCompanyId", drpMainCompany.Text),
        //        new SqlParameter("@ClientCompanyId", drpClientCompany.Text),
        //        new SqlParameter("@BankName", drpBankName.Text),
        //        new SqlParameter("@BankAcNo", txtAccountNo.Text),
        //        new SqlParameter("@BranchCode",txtBranchCode.Text),
        //        new SqlParameter("@BranchName", TxtBranchName.Text),
        //        new SqlParameter("@IFSCode", txtIfsCode.Text),
        //        new SqlParameter("@Address", txtAddress.Text),
        //    };

        //   // var i = _conn.ExecuteNonQuery("PRO_UpdateClientBankInfo", parameters);
        //}

        private void btn_GridView(object sender, EventArgs e)
        {
            try
            {
                var selectedRows = ClientCompanyBankGrid.GetSelectedRows();

                foreach (var rowHandle in selectedRows)
                {
                    ClientCompanyBankInfoRequest.Id = (Int64)ClientCompanyBankGrid.GetRowCellValue(rowHandle, "Id");
                    drpMainCompany.SelectedIndex = Convert.ToInt32(ClientCompanyBankGrid.GetRowCellValue(rowHandle, "MainCompanyId").ToString());
                    drpClientCompany.SelectedIndex = Convert.ToInt32(ClientCompanyBankGrid.GetRowCellValue(rowHandle, "ClientCompanyId").ToString());
                    drpBankName.Text = ClientCompanyBankGrid.GetRowCellValue(rowHandle, "BankName").ToString();
                    txtAccountNo.Text = ClientCompanyBankGrid.GetRowCellValue(rowHandle, "BankAcNo").ToString();
                    txtAddress.Text = ClientCompanyBankGrid.GetRowCellValue(rowHandle, "Address").ToString();
                    txtBranchCode.Text = ClientCompanyBankGrid.GetRowCellValue(rowHandle, "BranchCode").ToString();
                    TxtBranchName.Text = ClientCompanyBankGrid.GetRowCellValue(rowHandle, "BranchName").ToString();
                    txtIfsCode.Text = ClientCompanyBankGrid.GetRowCellValue(rowHandle, "IFSCode").ToString();

                }
                btnUpdate.Enabled = true;
                btnAdd.Enabled = false;

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            drpMainCompany.ResetText();
            drpClientCompany.ResetText();
            drpBankName.ResetText();
            txtAccountNo.ResetText();
            txtAddress.ResetText();
            txtBranchCode.ResetText();
            TxtBranchName.ResetText();
            txtIfsCode.ResetText();
        }
    }
}