using BusinessLayer;
using DevExpress.XtraEditors;
using DevExpress.XtraEditors.Controls;
using DevExpress.XtraGrid.Views.Grid;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace BillPlex
{
    public partial class FrmDirectJobReceivedWithoutGivingProfile : DevExpress.XtraEditors.XtraForm
    {
        private DirectJobReceivedWithoutGiving DirectJobReceivedWithoutGivingRequest;
        private FrmDirectJobReceivedWithoutGivingInfo DirectJobReceivedWithoutGivingInfoRequest;
        private GridView gridView;
        public FrmDirectJobReceivedWithoutGivingProfile()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }
        public void ReloadSqlDataSource()
        {
            sqlDataSource1.FillAsync();
            gridView1.RefreshData();
        }
        private void Newbtn_Click(object sender, EventArgs e)
        {
            FrmDirectJobReceivedWithoutGivingInfo CP = new FrmDirectJobReceivedWithoutGivingInfo();
            CP.MdiParent = this.MdiParent;
            CP.Show();
        }

        private void gridControl1_DoubleClick(object sender, EventArgs e)
        {
            var selectedRow = gridView1.GetSelectedRows();

            DirectJobReceivedWithoutGivingInfoRequest = new FrmDirectJobReceivedWithoutGivingInfo();

            DirectJobReceivedWithoutGivingInfoRequest.BindData(gridView1);
            DirectJobReceivedWithoutGivingInfoRequest.MdiParent = this.MdiParent;
            DirectJobReceivedWithoutGivingInfoRequest.Show();
        }

        private void FrmDirectJobReceivedWithoutGivingProfile_Load(object sender, EventArgs e)
        {
            int centerX = (this.Width - panelControl2.Width) / 2;
            int centerY = (this.Height - panelControl2.Height) / 2;

            // Set the controls' positions to the calculated center position
            panelControl2.Location = new Point(centerX, centerY);
        }

        private void Deletebtn_Click(object sender, EventArgs e)
        {
            var selectedRows = gridView1.GetSelectedRows();
            if (selectedRows.Length > 0)
            {
                if (selectedRows.Length > 0)
                {
                    foreach (var rowHandle in selectedRows)
                    {
                        DirectJobReceivedWithoutGivingRequest.Id = (Int64)gridView1.GetRowCellValue(rowHandle, "Id");
                    }
                    DirectJobReceivedWithoutGivingRequest.Delete();
                    if (DirectJobReceivedWithoutGivingRequest.Result.Status == ResultStatus.Success)
                    {
                        XtraMessageBox.Show(DirectJobReceivedWithoutGivingRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        ReloadSqlDataSource();
                    }
                    else
                    {
                        if (DirectJobReceivedWithoutGivingRequest.Result.Message.Contains("FK__"))
                        {
                            XtraMessageBox.Show("This Iteam has RelationShip with Another Model", "RelationShip Issues", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        }
                        else
                        {
                            XtraMessageBox.Show(DirectJobReceivedWithoutGivingRequest.Result.Message, "Warning", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        }
                    }
                }
                else
                {
                    XtraMessageBox.Show("No Record Found", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                }
            }
            else
            {
                XtraMessageBox.Show("Records not found", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }
    }
}