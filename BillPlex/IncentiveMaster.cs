using BusinessLayer;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace BillPlex
{
    public partial class IncentiveMaster : DevExpress.XtraEditors.XtraForm
    {
        private IncentiveMasters IncentiveMasterRequest;
        public IncentiveMaster()
        {
            InitializeComponent();
            IncentiveMasterRequest = new IncentiveMasters();
            IncentiveMasterRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            //sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        //private void dropDownButton1_Click(object sender, EventArgs e)
        //{

        //}

        private void btn_AddClick(object sender, EventArgs e)
        {
            try
            {
                IncentiveMasterRequest.ProductName = DrpProductName.Text;
                IncentiveMasterRequest.ModelCode = DrpModelCode.Text;
                IncentiveMasterRequest.ModelName = DrpModelName.Text;
                IncentiveMasterRequest.ModelSize = DrpModelSize.Text;
                IncentiveMasterRequest.DurationPeriod = DrpDurationPeriod.Text;
                IncentiveMasterRequest.Date = DDdate.Text;
                IncentiveMasterRequest.Update();

                if (IncentiveMasterRequest.Result.Status == ResultStatus.Success)
                {
                    XtraMessageBox.Show(IncentiveMasterRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }

            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btn_EditClick(object sender, EventArgs e)
        {
            try
            {
                var selectedRows = gridView1.GetSelectedRows();

                foreach (var rowHandle in selectedRows)
                {
                    IncentiveMasterRequest.Id = (Int64)gridView1.GetRowCellValue(rowHandle, "Id");
                    DrpProductName.Text = gridView1.GetRowCellValue(rowHandle, "ProductName").ToString();
                    DrpModelCode.Text = gridView1.GetRowCellValue(rowHandle, "ModelCode").ToString();
                    DrpModelName.Text = gridView1.GetRowCellValue(rowHandle, "ModelName").ToString();
                    DrpModelSize.Text = gridView1.GetRowCellValue(rowHandle, "ModelSize").ToString();
                    DrpDurationPeriod.Text = gridView1.GetRowCellValue(rowHandle, "DurationPeriod").ToString();
                    DDdate.Text = gridView1.GetRowCellValue(rowHandle, "Date").ToString();

                }
                btnAdd.Enabled = false;
                btnEdit.Enabled = false;
                btnDelete.Enabled = false;
                btnUpdate.Enabled = true;
                btnClear.Enabled = false;


            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private void btn_DeleteClick(object sender, EventArgs e)
        {
            {
                var selectedRows = gridView1.GetSelectedRows();

                foreach (var rowHandle in selectedRows)
                {
                    var id = gridView1.GetRowCellValue(rowHandle, "Id");

                    IncentiveMasterRequest.Id = (Int64)id;
                }

                IncentiveMasterRequest.Delete();

                if (IncentiveMasterRequest.Result.Status == ResultStatus.Success)
                {
                    XtraMessageBox.Show(IncentiveMasterRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {
            {
                var selectedRows = gridView1.GetSelectedRows();

                foreach (var rowHandle in selectedRows)
                {
                    var id = gridView1.GetRowCellValue(rowHandle, "Id");

                    IncentiveMasterRequest.Id = (Int64)id;
                }

                IncentiveMasterRequest.Delete();

                if (IncentiveMasterRequest.Result.Status == ResultStatus.Success)
                {
                    XtraMessageBox.Show(IncentiveMasterRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
        }

        

        private void btn_ClearClick(object sender, EventArgs e)
        {
            // Clear the values in textboxes
            DrpProductName.ResetText();
            DrpModelCode.ResetText();
            DrpModelName.ResetText();
            DrpModelSize.ResetText();
            DrpDurationPeriod.ResetText();
            DDdate.ResetText();
        }

        
    }
}