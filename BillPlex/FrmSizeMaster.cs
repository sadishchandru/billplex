using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using BusinessLayer;

namespace BillPlex
{
    public partial class FrmSizeMaster : DevExpress.XtraEditors.XtraForm
    {
        private SizeMaster sizeMasterRequest;
        public FrmSizeMaster()
        {
            InitializeComponent();
            sizeMasterRequest = new SizeMaster();
            sizeMasterRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            //sizeMasterRequest.Result = new ResultDetail();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }
        public void ReloadSqlDataSource()
        {
            sqlDataSource1.FillAsync();
            SizeMasterGrid.RefreshData();

        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtSName.Text != string.Empty)
                {
                    sizeMasterRequest.SizeName = txtSName.Text;
                    sizeMasterRequest.Update();
                    if (sizeMasterRequest.Result.Status == ResultStatus.Success)
                    {
                        XtraMessageBox.Show(sizeMasterRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        ReloadSqlDataSource();
                    }
                    else
                    {
                        XtraMessageBox.Show(sizeMasterRequest.Result.Message, "Warning", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                    }
                }
                else
                {
                    XtraMessageBox.Show("Please Enter Manditory field", "Alert", MessageBoxButtons.OK, MessageBoxIcon.Information);

                }

            }

            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btClear_Click(object sender, EventArgs e)
        {
            txtSName.ResetText();
        }

        private void btDelete_Click(object sender, EventArgs e)
        {
            var selectedRows = SizeMasterGrid.GetSelectedRows();

            foreach (var rowHandle in selectedRows)
            {
                var ID = SizeMasterGrid.GetRowCellValue(rowHandle, "Id");

                sizeMasterRequest.Id = (Int32)ID;
            }

            sizeMasterRequest.Delete();

            if (sizeMasterRequest.Result.Status == ResultStatus.Success)
            {
                XtraMessageBox.Show(sizeMasterRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                ReloadSqlDataSource();
            }
        }

        private void btEdit_Click(object sender, EventArgs e)
        {
            try
            {
                var selectedRows = SizeMasterGrid.GetSelectedRows();

                foreach (var rowHandle in selectedRows)
                {
                    sizeMasterRequest.Id = (Int32)SizeMasterGrid.GetRowCellValue(rowHandle, "Id");
                    txtSName.Text = SizeMasterGrid.GetRowCellValue(rowHandle, "Sizename").ToString();
                    
                }
                btnAdd.Enabled = true;
                btEdit.Enabled = false;
                btDelete.Enabled = true;
                btUpdate.Enabled = true;
            }
            catch (Exception ex)
            {
                Result.Message = ex.Message;
                Result.Status = ResultStatus.Success;
            }
        }

        private void btExit_Click(object sender, EventArgs e)
        {
            this.Close();
        }
    }
}