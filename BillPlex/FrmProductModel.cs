using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using BusinessLayer;

namespace BillPlex
{
    public partial class FrmProductModel : DevExpress.XtraEditors.XtraForm
    {
        private ProductModel productModelRequest;
        public FrmProductModel()
        {
            InitializeComponent();

            productModelRequest = new ProductModel();
            productModelRequest.ConnectionString = ConfigurationManager.ConnectionStrings["BillPlex"].ConnectionString;
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
             {
                    productModelRequest.RawMaterialType = drpRawType.Text;
                    productModelRequest.RawMaterialName = drpRawName.Text;
                    productModelRequest.ProductName = drpProName.Text;
                    productModelRequest.ModelCode = txtModelCode.Text;
                    productModelRequest.ModelName = txtModelName.Text;
                    productModelRequest.ProductSize = drpProSize.Text;
                    productModelRequest.RawMaterialStock = txtRawStock.Text;
                    productModelRequest.RequiredRawMaterialWeight = txtRawWeight.Text;
                    productModelRequest.WagesForProductModel = txtWages.Text;
                    productModelRequest.PMDate = ddDate.Text;
                    productModelRequest.Update();


                if (productModelRequest.Result.Status == ResultStatus.Success)
            {
                XtraMessageBox.Show(productModelRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            // Get the selected rows from the GridView control
            var selectedRows = grd_ProductModel.GetSelectedRows();

            foreach (var rowHandle in selectedRows)
            {
                var id = grd_ProductModel.GetRowCellValue(rowHandle, "Id");

                productModelRequest.Id = (Int64)id;
            }

            productModelRequest.Delete();

            if (productModelRequest.Result.Status == ResultStatus.Success)
            {
                XtraMessageBox.Show(productModelRequest.Result.Message, "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void btnClear_Click(object sender, EventArgs e)
        {
            drpRawType.ResetText();
            drpRawName.ResetText();
            drpProName.ResetText();
            txtModelCode.ResetText();
            txtModelName.ResetText();
            drpProSize.ResetText();
            txtRawStock.ResetText();
            txtRawWeight.ResetText();
            txtWages.ResetText();
            ddDate.ResetText();
        }

        private void btnEdit_Click(object sender, EventArgs e)
        {
            try
            {
                var selectedRows = grd_ProductModel.GetSelectedRows();

                foreach (var rowHandle in selectedRows)
                {
                    productModelRequest.Id = (Int64)grd_ProductModel.GetRowCellValue(rowHandle, "Id");
                    drpRawType.Text = grd_ProductModel.GetRowCellValue(rowHandle, "RawmaterialTypeId").ToString();
                    drpRawName.Text = grd_ProductModel.GetRowCellValue(rowHandle, "RawMaterialId").ToString();
                    drpProName.Text = grd_ProductModel.GetRowCellValue(rowHandle, "ProductId").ToString();
                    txtModelCode.Text = (string)grd_ProductModel.GetRowCellValue(rowHandle, "ProductCode");
                    txtModelName.Text = (string)grd_ProductModel.GetRowCellValue(rowHandle, "ProductModel");
                    drpProSize.Text = (string)grd_ProductModel.GetRowCellValue(rowHandle, "ProductSize");
                    txtRawStock.Text = (string)grd_ProductModel.GetRowCellValue(rowHandle, "RawMaterialStock");
                    txtRawWeight.Text = (string)grd_ProductModel.GetRowCellValue(rowHandle, "ReqRawMaterial");
                    txtWages.Text = (string)grd_ProductModel.GetRowCellValue(rowHandle, "WagesforItem");
                    var datete = grd_ProductModel.GetRowCellValue(rowHandle, "Date").ToString();
                    DateTime dat = DateTime.Parse(datete);
                    ddDate.Text = dat.ToString();
                }
                btnAdd.Enabled = false;
                btnEdit.Enabled = false;
                btnDelete.Enabled = true;
                btnUpdate.Enabled = true;

            }
            catch (Exception ex)
            {

            }
        }
    }
}